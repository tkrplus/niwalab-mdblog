{"version":3,"sources":["webpack:///./src/components/CategoryList.js","webpack:///./src/pages/index.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Bio.js","webpack:///./src/components/layout.js"],"names":["CategoryList","render","categories","this","props","sortedCateogories","_","sortBy","react_default","a","createElement","map","category","key","fieldValue","gatsby_browser_entry","to","totalCount","React","Component","BlogIndex","siteTitle","get","siteDescription","posts","layout","location","Helmet_default","htmlAttributes","lang","meta","name","content","title","Bio","_ref","node","fields","slug","style","marginBottom","rhythm","boxShadow","frontmatter","date","dangerouslySetInnerHTML","__html","excerpt","CategoryList_CategoryList","pageQuery","__webpack_require__","d","__webpack_exports__","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","react__WEBPACK_IMPORTED_MODULE_1___default","display","Template","header","_this$props","__PATH_PREFIX__","react__WEBPACK_IMPORTED_MODULE_2___default","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding"],"mappings":"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","file":"component---src-pages-index-js-8be6a85aa5a5e15510aa.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport _ from 'lodash'\n\nimport { rhythm } from '../utils/typography'\n\nexport default class CategoryList extends React.Component {\n  render() {\n    const {\n      categories\n    } = this.props\n    const sortedCateogories = _.sortBy(categories, 'fieldValue')\n\n    return (\n      <div>\n        <h4>Categories</h4>\n        <ul>\n          {sortedCateogories.map((category) => {\n            return (\n              <li key={`key-${category.fieldValue}`}>\n                <Link to={`/category/${category.fieldValue}`}>\n                  {`${category.fieldValue} (${category.totalCount})`}\n                </Link>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\n\nimport Bio from '../components/Bio'\nimport CategoryList from '../components/CategoryList'\nimport Layout from '../components/layout'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const siteDescription = get(\n      this,\n      'props.data.site.siteMetadata.description'\n    )\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n    const categories = get(this, 'props.data.allMarkdownRemark.categories')\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={siteTitle}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = get(node, 'frontmatter.title') || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n        <CategoryList\n          categories={categories}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n      categories: group(field: frontmatter___category) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => ({\n  'a.gatsby-resp-image-link': {\n    boxShadow: 'none',\n  },\n})\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\n// Import typefaces\nimport 'typeface-montserrat'\nimport 'typeface-merriweather'\n\nimport { rhythm } from '../utils/typography'\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2.5),\n        }}\n      >\n        <p>\n          T++\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Bio\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'inherit',\n            }}\n            to={'/'}\n          >\n            Niwalab\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: 'Montserrat, sans-serif',\n            marginTop: 0,\n            marginBottom: rhythm(-1),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'inherit',\n            }}\n            to={'/'}\n          >\n            Niwalab\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Template\n"],"sourceRoot":""}