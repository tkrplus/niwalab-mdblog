{"data":{"site":{"siteMetadata":{"title":"Niwa-Lab Blog","description":"A blog"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"イベントの概要 日時： 2018年11月1日 19:30 - 21:30 場所： Mercari URL：  https://react-kai.connpass.com/event/102286/ どんな会だった？ 今回のホットワードは   でした。 会自体はLTが6つと懇親会といった、軽めの内容でした。\n基本的にはエンジニア同士を交流する場をつくったよ！という感じでした。 そういったライトな内容だったこともあり、会の雰囲気はかなりアットホームなほっこりタイプでした。笑 前日に行ったSpring Festが、堅めの内容だったこともあり、React会のゆるさが良い感じに思えました。\n交流を目的とする場合は、ある程度ゆるい雰囲気作りも必要なんだなと感じました。 Hooksについて まず、  について色々と知れてよかったです。 とは、従来はサードパーティ製ライブラリで実現されていたHoCがReact公式にサポートされたものらしい。\n従来のライブラリでいうと とかそういったやつですね。\n認識に誤りがあったらごめんなさい。 ちなみに の作者はFacebookに採用されて、 の開発に携わったそうな。\nそういった背景もあり、 は今後はメンテナンスされないそうです（え… 個人的にはHoCをあんまり利用していないので の旨味がぱっと理解できないので、\nちょっと様子見かなといったところです。 でもReact Hooksを導入した経緯の\n「Class ComponentでReactがStateを持ってしまっていたのを改善したい\n今後はFunctional Componentを中心としてStatelessなものとしていきたい」\nという考え方にはとても賛同してます。 実際にReactComponentを作っていると、Statefulなものを作ってしまうと複雑性が増してしまうので\nあまり好みではなかったんですよね。 なので、大体のコンポーネントはFunctional Componentをベースとして作っています。\nページのライフサイクル等がひつようなところだけ、Class Componentを使用していました。\n が導入されたことでページのライフサイクルをどう扱わうのか？みたいなところも興味あります。 Hooks以外に気になったこと 個人的には「expo.ioを利用したReact…","fields":{"slug":"/20181101/"},"frontmatter":{"date":"01 November, 2018","title":"React会 #1 参加レポート"}}},{"node":{"excerpt":"イベント概要 日時： 2018年10月31日 10:00 - 18:30 場所： 両国　KFCホール（チキンとは関係なかた） URL：  http://springfest2018.springframework.jp/ 主催：Spring日本ユーザ会。その他スポンサーは割とTech系とSIer系とIT教育系 どんなイベントだった？ 今回のイベントでのホットワードは以下の３つかなと個人的に感じた Micro Service Serverless Agile 個人的にはこの3つは切り離せない関係にあると思っている。\nマイクロサービスを実現するには、小さいチームでも成り立つようにサーバレスで運用作業を軽減する。\nマイクロサービスを実現するために、小さいチームのパフォーマンスをアジャイルで最大化する。 特にJava系のイベントということで、他の勉強会に比べて堅いというかレガシーというか、\nそういったところに所属している参加者が多かった。\nただ、硬くレガシーな人も課題感はもっており、転換するためにどうするか？\nという考えを持ってSpringに向き合いに来た感じはあった。 意外にKotlinに対する興味は皆持っているようだった。\n自分も参加したが、Kotlinに関するセッションでは立ち見がかなり発生していた。\n懇親会でも、Kotlinどう思う？みたいな話はちょくちょくあった。 後述しますが、Kotlin x SpringBoot2.0は試したことがあり、良い印象をもっている。\nKotlinはゆくゆく導入したいなーという考えがあるので、ちゃんとアンテナをはっておこうと思った。 最後に普通の感想として… 同じSI系の人と話ができたのが嬉しかった。\n特に、SIの古さを感じて「どうにかしたい！」と思っている人と会話できたのが、\n今回最大の収穫でした。 あと、FLUX、Reactiveに対する誤解が溶けたのも地味に良い収穫だった。笑 Sessions エンタープライズ・マイクロサービスの格言 Agenda エンタープライズ系システムのマイクロサービス化、それが、エンタープライズ・マイクロサービス。 Spring Fest 201…","fields":{"slug":"/20181031/"},"frontmatter":{"date":"31 October, 2018","title":"Spring Fest 2018 参加レポート"}}},{"node":{"excerpt":"GatsbyでBlogを始めてみました。 半年ほど前から、そろそろブログを始めてみようかなと考えていました。 ブログを作ろうと思った動機をつらつらとあげると、だいたいこんな感じ。 IT技術的なことを、ちゃんと発信していかないとなぁという課題感 そもそも文章を書くことが苦手なので、その練習 まとまった形で技術メモを残す場所が欲しかった 何かしら家でプログラミングしたかったので、ブログ作りは良い題材かなと といったところで、このブログでは基本的には技術を発信する場として使用したいと考えてます。 たまに、日常的なことやコラムみたいなものも載せるかもしれない。 ブログツールの選定 個人でブログを作るにあたって、世の中には数多のブログツールがありますよ。 自分の中で選択肢として下のものが考えられました。 WordPress 不採用：2年前にトライしてやめたことあり。今回のブログで不採用となった理由は、いまさらPHP？というところと、サーバ代がネックになりそうだなぁという気持ち。 Hatena 不採用：一番簡単に始められそう。だけれども、技術的に面白くないなと思ったのでやめました。（変にやりたがりだから、やらずじまいになることが多いんだな。 フルスクラッチ 不採用：サーバサイドはWPで、フロントはSPAなんてことも考えたりもしました。ただ、上述のWPの通りサーバ代がネック。そして、SPAを作り切る体力がなさそうだった。（WP使用ってフルスクラッチちゃうやんというのは置いておいてください。 Hugo 不採用：ここはちょっと気持ちが惹かれた。特にGoを使用しているところ。ただ、内部はGOで書かれているけどブログを書く上では、あまりGOを使用するわけでもなさそうだったので却下。 Gatsby 採用◎：静的ページで済むのでCDNさえあれば良いというのが圧倒的魅力。そして、ベースがReactなのも◎。業務で一部Reactを使用しているので、Reactについて深掘りできたら良いなという気持ちもある。そして、なによりMarkdownでブログをかけるのは嬉しい。 ということで、今回は   を使用してみました。 これからの工程 ということで、最初の記事を書いてみました。 これから下記の工程でブログを作り上げていけたらなと計画しています。 GitHub Pagesへの公開 適当なCDN…","fields":{"slug":"/20181023/"},"frontmatter":{"date":"23 October, 2018","title":"GatsbyでBlogを始めてみました。"}}}],"categories":[{"fieldValue":"Memo","totalCount":1},{"fieldValue":"TechConference","totalCount":1},{"fieldValue":"勉強会","totalCount":1}]}},"pageContext":{}}